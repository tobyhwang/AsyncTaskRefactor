package cs478.project5.toby.androidasynctask;import android.support.v4.content.Loader;import android.support.v4.content.AsyncTaskLoader;import android.support.v4.app.LoaderManager;import android.os.Looper;import android.os.Handler;import android.content.Context;import android.app.ProgressDialog;import android.os.AsyncTask;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;public class MainActivity extends AppCompatActivity {    private Button button;    private EditText time;    private TextView finalResult;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        time = (EditText) findViewById(R.id.in_time);        button = (Button) findViewById(R.id.btn_run);        finalResult = (TextView) findViewById(R.id.tv_result);        button.setOnClickListener(new View.OnClickListener(){            @Override            public void onClick(View v){                String sleepTime = time.getText().toString();		Bundle extras = new Bundle();		String[] params = new String[] {sleepTime};		extras.putStringArray("list", params);		getSupportLoaderManager().initLoader(1, extras, loaderCallbacks);            }        });    }	//*** AUTO_REFACTORED: Loader Callback abstract class ***	private LoaderManager.LoaderCallbacks<String> loaderCallbacks = new LoaderManager.LoaderCallbacks<String>() {	@Override	public Loader<String> onCreateLoader(int id, Bundle bundle){		return new AsyncTaskLoaderRunner(MainActivity.this, bundle, time, finalResult);	}	@Override	public void onLoadFinished(Loader<String> listLoader, String strings){		getSupportLoaderManager().destroyLoader(1);	}	@Override	public void onLoaderReset(Loader<String> listLoader){}	};	//*** AUTO_REFACTORED: Loader Class ***	public static class AsyncTaskLoaderRunner extends AsyncTaskLoader<String>{        private String resp;        ProgressDialog progressDialog;		private EditText time;		private TextView finalResult;		private Context context;		private Bundle bundle;		public AsyncTaskLoaderRunner(Context context, Bundle bundle , EditText time, TextView finalResult){			super(context);			this.context = context;			this.bundle=bundle;			this.time=time;			this.finalResult=finalResult;		}		@Override		public void onStartLoading(){            progressDialog = ProgressDialog.show(context, "ProgressDialog", "Wait for " + time.getText().toString() + " seconds");			forceLoad();		}		@Override		public String loadInBackground(){			String[] params = bundle.getStringArray("list");            publishProgress("Sleeping..."); //Calls onProgressUpdated            try{                int time = Integer.parseInt(params[0])*1000;                Thread.sleep(time);                resp = "Slept for " + params + " seconds";            } catch(InterruptedException e){                e.printStackTrace();                resp = e.getMessage();            }catch(Exception e){                e.printStackTrace();                resp = e.getMessage();            }            return resp;		}		protected void publishProgress( String str){			final String update = str;			Handler UIHandler = new Handler(Looper.getMainLooper());			UIHandler.post(new Runnable() {				@Override				public void run() {	            finalResult.setText(update);					}			});		}		@Override		public void deliverResult(String params){			super.deliverResult(params);            progressDialog.dismiss();            finalResult.setText(params);		}	}}